/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MetaTxReceiver,
  MetaTxReceiverInterface,
} from "../../../contracts/MetaTransaction.sol/MetaTxReceiver";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "MetaTxSignatureNotMatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "NonceTooLow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "metaTxGetNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "metaTxPrepare",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MetaTxReceiver.ForwardRequest",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "metaTxPrepareWithNonce",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MetaTxReceiver.ForwardRequest",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MetaTxReceiver.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "metaTxVerify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040518060400160405280601881526020017f50686174526f6c6c75704d6574615478526563656976657200000000000000008152506040518060400160405280600581526020017f302e302e31000000000000000000000000000000000000000000000000000000815250620000956000836200015160201b90919060201c565b6101208181525050620000b36001826200015160201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620000f2620001a960201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050506200014b67b4553d9429beaa4660c01b6200020660201b60201c565b62000804565b600060208351101562000177576200016f836200020960201b60201c565b9050620001a3565b8262000189836200027660201b60201c565b60000190816200019a9190620004fa565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e051610100514630604051602001620001eb95949392919062000652565b60405160208183030381529060405280519060200120905090565b50565b600080829050601f815111156200025957826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016200025091906200073e565b60405180910390fd5b805181620002679062000794565b60001c1760001b915050919050565b6000819050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200030257607f821691505b602082108103620003185762000317620002ba565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000343565b6200038e868362000343565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003db620003d5620003cf84620003a6565b620003b0565b620003a6565b9050919050565b6000819050919050565b620003f783620003ba565b6200040f6200040682620003e2565b84845462000350565b825550505050565b600090565b6200042662000417565b62000433818484620003ec565b505050565b5b818110156200045b576200044f6000826200041c565b60018101905062000439565b5050565b601f821115620004aa5762000474816200031e565b6200047f8462000333565b810160208510156200048f578190505b620004a76200049e8562000333565b83018262000438565b50505b505050565b600082821c905092915050565b6000620004cf60001984600802620004af565b1980831691505092915050565b6000620004ea8383620004bc565b9150826002028217905092915050565b620005058262000280565b67ffffffffffffffff8111156200052157620005206200028b565b5b6200052d8254620002e9565b6200053a8282856200045f565b600060209050601f8311600181146200057257600084156200055d578287015190505b620005698582620004dc565b865550620005d9565b601f19841662000582866200031e565b60005b82811015620005ac5784890151825560018201915060208501945060208101905062000585565b86831015620005cc5784890151620005c8601f891682620004bc565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b620005f681620005e1565b82525050565b6200060781620003a6565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200063a826200060d565b9050919050565b6200064c816200062d565b82525050565b600060a082019050620006696000830188620005eb565b620006786020830187620005eb565b620006876040830186620005eb565b620006966060830185620005fc565b620006a5608083018462000641565b9695505050505050565b600082825260208201905092915050565b60005b83811015620006e0578082015181840152602081019050620006c3565b60008484015250505050565b6000601f19601f8301169050919050565b60006200070a8262000280565b620007168185620006af565b935062000728818560208601620006c0565b6200073381620006ec565b840191505092915050565b600060208201905081810360008301526200075a8184620006fd565b905092915050565b600081519050919050565b6000819050602082019050919050565b60006200078b8251620005e1565b80915050919050565b6000620007a18262000762565b82620007ad846200076d565b9050620007ba816200077d565b92506020821015620007fd57620007f87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000343565b831692505b5050919050565b60805160a05160c05160e0516101005161012051610140516117866200085f6000396000610823015260006107e801526000610c2f01526000610c0e01526000610885015260006108db0152600061090401526117866000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806322dae16c1461005c5780635232f0d71461008d57806384b0196e146100be578063bbbfe446146100e2578063f4034a9614610112575b600080fd5b61007660048036038101906100719190610f71565b610142565b6040516100849291906110fc565b60405180910390f35b6100a760048036038101906100a2919061112c565b6103fb565b6040516100b59291906110fc565b60405180910390f35b6100c6610498565b6040516100d997969594939291906112e9565b60405180910390f35b6100fc60048036038101906100f79190611391565b610542565b6040516101099190611428565b60405180910390f35b61012c60048036038101906101279190611443565b61073d565b6040516101399190611470565b60405180910390f35b61014a610e37565b600061016067868620c1065846ac60c01b6107c2565b610174670efdb62ecfb8f77660c01b6107c2565b610188673f6377fa2a498fcc60c01b6107c2565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831015610275576101e367f66458c6c86e1bd060c01b6107c2565b6101f7671f870b4b6383ed9160c01b6107c2565b82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040517f045f356c00000000000000000000000000000000000000000000000000000000815260040161026c92919061148b565b60405180910390fd5b61028967865dc8a087df564660c01b6107c2565b61029d6780b7e77cc55c3a3160c01b6107c2565b6102b167d6fa6abc2778959460c01b6107c2565b600060405180606001604052808873ffffffffffffffffffffffffffffffffffffffff16815260200185815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250905061033e6737ca105b835de70460c01b6107c2565b610352679d35e05fd6a592d760c01b6107c2565b60006103c07f2c521d146a6f6c09462cb178367b028f1718b1f01d7995bb405dae702c2bee7d89878a8a60405161038a9291906114f3565b60405180910390206040516020016103a5949392919061150c565b604051602081830303815290604052805190602001206107c5565b90506103d667c7b41500479f009660c01b6107c2565b6103ea67478c57b1a73635c560c01b6107c2565b818193509350505094509492505050565b610403610e37565b600061041967697a61fc92f22dad60c01b6107c2565b61042d670962da8448ca07c360c01b6107c2565b610441672f43f19068e819a660c01b6107c2565b61048c858585600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610142565b91509150935093915050565b6000606080600080600060606104ac6107df565b6104b461081a565b46306000801b600067ffffffffffffffff8111156104d5576104d4611551565b5b6040519080825280602002602001820160405280156105035781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000610558678aba1bac848af29e60c01b6107c2565b61056c67249cb7d17ce2119a60c01b6107c2565b61058067782dca9583b3179960c01b6107c2565b600061066884848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061065a7f2c521d146a6f6c09462cb178367b028f1718b1f01d7995bb405dae702c2bee7d8860000160208101906106019190611443565b89602001358a8060400190610616919061158f565b6040516106249291906114f3565b604051809103902060405160200161063f949392919061150c565b604051602081830303815290604052805190602001206107c5565b61085590919063ffffffff16565b905061067e676b0fcb358343a7d260c01b6107c2565b610692673354dd2d93fdd66860c01b6107c2565b8460200135600260008760000160208101906106ae9190611443565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414801561073357508460000160208101906107049190611443565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b6000610753677f573c55ef4038d960c01b6107c2565b61076767c481d322defe28c960c01b6107c2565b61077b675a5fc612ffcd055060c01b6107c2565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b50565b60006107d86107d2610881565b83610938565b9050919050565b606061081560007f000000000000000000000000000000000000000000000000000000000000000061097990919063ffffffff16565b905090565b606061085060017f000000000000000000000000000000000000000000000000000000000000000061097990919063ffffffff16565b905090565b6000806000806108658686610a29565b9250925092506108758282610a85565b82935050505092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156108fd57507f000000000000000000000000000000000000000000000000000000000000000046145b1561092a577f00000000000000000000000000000000000000000000000000000000000000009050610935565b610932610be9565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b606060ff60001b83146109965761098f83610c7f565b9050610a23565b8180546109a290611621565b80601f01602080910402602001604051908101604052809291908181526020018280546109ce90611621565b8015610a1b5780601f106109f057610100808354040283529160200191610a1b565b820191906000526020600020905b8154815290600101906020018083116109fe57829003601f168201915b505050505090505b92915050565b60008060006041845103610a6e5760008060006020870151925060408701519150606087015160001a9050610a6088828585610cf3565b955095509550505050610a7e565b60006002855160001b9250925092505b9250925092565b60006003811115610a9957610a98611652565b5b826003811115610aac57610aab611652565b5b0315610be55760016003811115610ac657610ac5611652565b5b826003811115610ad957610ad8611652565b5b03610b10576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610b2457610b23611652565b5b826003811115610b3757610b36611652565b5b03610b7c578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401610b739190611470565b60405180910390fd5b600380811115610b8f57610b8e611652565b5b826003811115610ba257610ba1611652565b5b03610be457806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401610bdb9190611681565b60405180910390fd5b5b5050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610c6495949392919061169c565b60405160208183030381529060405280519060200120905090565b60606000610c8c83610de7565b90506000602067ffffffffffffffff811115610cab57610caa611551565b5b6040519080825280601f01601f191660200182016040528015610cdd5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610d33576000600385925092509250610ddd565b600060018888888860405160008152602001604052604051610d58949392919061170b565b6020604051602081039080840390855afa158015610d7a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dce57600060016000801b93509350935050610ddd565b8060008060001b935093509350505b9450945094915050565b60008060ff8360001c169050601f811115610e2e576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ea382610e78565b9050919050565b610eb381610e98565b8114610ebe57600080fd5b50565b600081359050610ed081610eaa565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610efb57610efa610ed6565b5b8235905067ffffffffffffffff811115610f1857610f17610edb565b5b602083019150836001820283011115610f3457610f33610ee0565b5b9250929050565b6000819050919050565b610f4e81610f3b565b8114610f5957600080fd5b50565b600081359050610f6b81610f45565b92915050565b60008060008060608587031215610f8b57610f8a610e6e565b5b6000610f9987828801610ec1565b945050602085013567ffffffffffffffff811115610fba57610fb9610e73565b5b610fc687828801610ee5565b93509350506040610fd987828801610f5c565b91505092959194509250565b610fee81610e98565b82525050565b610ffd81610f3b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561103d578082015181840152602081019050611022565b60008484015250505050565b6000601f19601f8301169050919050565b600061106582611003565b61106f818561100e565b935061107f81856020860161101f565b61108881611049565b840191505092915050565b60006060830160008301516110ab6000860182610fe5565b5060208301516110be6020860182610ff4565b50604083015184820360408601526110d6828261105a565b9150508091505092915050565b6000819050919050565b6110f6816110e3565b82525050565b600060408201905081810360008301526111168185611093565b905061112560208301846110ed565b9392505050565b60008060006040848603121561114557611144610e6e565b5b600061115386828701610ec1565b935050602084013567ffffffffffffffff81111561117457611173610e73565b5b61118086828701610ee5565b92509250509250925092565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6111c18161118c565b82525050565b600081519050919050565b600082825260208201905092915050565b60006111ee826111c7565b6111f881856111d2565b935061120881856020860161101f565b61121181611049565b840191505092915050565b61122581610f3b565b82525050565b61123481610e98565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006112728383610ff4565b60208301905092915050565b6000602082019050919050565b60006112968261123a565b6112a08185611245565b93506112ab83611256565b8060005b838110156112dc5781516112c38882611266565b97506112ce8361127e565b9250506001810190506112af565b5085935050505092915050565b600060e0820190506112fe600083018a6111b8565b818103602083015261131081896111e3565b9050818103604083015261132481886111e3565b9050611333606083018761121c565b611340608083018661122b565b61134d60a08301856110ed565b81810360c083015261135f818461128b565b905098975050505050505050565b600080fd5b6000606082840312156113885761138761136d565b5b81905092915050565b6000806000604084860312156113aa576113a9610e6e565b5b600084013567ffffffffffffffff8111156113c8576113c7610e73565b5b6113d486828701611372565b935050602084013567ffffffffffffffff8111156113f5576113f4610e73565b5b61140186828701610ee5565b92509250509250925092565b60008115159050919050565b6114228161140d565b82525050565b600060208201905061143d6000830184611419565b92915050565b60006020828403121561145957611458610e6e565b5b600061146784828501610ec1565b91505092915050565b6000602082019050611485600083018461121c565b92915050565b60006040820190506114a0600083018561121c565b6114ad602083018461121c565b9392505050565b600081905092915050565b82818337600083830152505050565b60006114da83856114b4565b93506114e78385846114bf565b82840190509392505050565b60006115008284866114ce565b91508190509392505050565b600060808201905061152160008301876110ed565b61152e602083018661122b565b61153b604083018561121c565b61154860608301846110ed565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126115ac576115ab611580565b5b80840192508235915067ffffffffffffffff8211156115ce576115cd611585565b5b6020830192506001820236038313156115ea576115e961158a565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061163957607f821691505b60208210810361164c5761164b6115f2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208201905061169660008301846110ed565b92915050565b600060a0820190506116b160008301886110ed565b6116be60208301876110ed565b6116cb60408301866110ed565b6116d8606083018561121c565b6116e5608083018461122b565b9695505050505050565b600060ff82169050919050565b611705816116ef565b82525050565b600060808201905061172060008301876110ed565b61172d60208301866116fc565b61173a60408301856110ed565b61174760608301846110ed565b9594505050505056fea2646970667358221220440c67cd51eabe95a2c80190eaaa77e1580ae599ac829930e8ad2e0582c021dd64736f6c63430008180033";

type MetaTxReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaTxReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaTxReceiver__factory extends ContractFactory {
  constructor(...args: MetaTxReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MetaTxReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MetaTxReceiver__factory {
    return super.connect(runner) as MetaTxReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaTxReceiverInterface {
    return new Interface(_abi) as MetaTxReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MetaTxReceiver {
    return new Contract(address, _abi, runner) as unknown as MetaTxReceiver;
  }
}
